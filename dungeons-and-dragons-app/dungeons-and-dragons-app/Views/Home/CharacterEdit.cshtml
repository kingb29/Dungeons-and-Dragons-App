@section Styles {
    <link href="@Url.Content("~/css/CreateCharacter.css")" rel="stylesheet" type="text/css" />
}

@{
    ViewData["Title"] = "Edit Your Character";
}

@model CharacterViewModel;

<h2>@ViewData["Title"]</h2>

@using (Html.BeginForm("CharacterEdit", "Home", FormMethod.Post))
{
    <div class="row">
        <div class="col-xs-12">
            <div asp-validation-summary="All"></div>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12 col-lg-3">
            <label for="name" class="strong">Name:</label><br>
            @Html.TextBoxFor(m => m.name, new {@class = "form-control"})
            <br>
            <label for="race" class="strong">Race:</label><br>
            @Html.DropDownListFor(m => m.race.id, Model.raceList, new { @class = "form-control" })
            <br>
            <label for="class" class="strong">Class:</label><br>
            @Html.DropDownListFor(m => m.charClass.id, Model.classList, new { @class = "form-control" })
            <br>
            <label for="level" class="strong">Level:</label><br>
            @Html.TextBoxFor(m => m.level, new { @class = "form-control" })
            <br>
            <label for="alignment" class="strong">Alignment:</label><br>
            @Html.DropDownListFor(m => m.alignment.id, Model.alignmentList, new { @class = "form-control" })
            <br>
            <label for="gender" class="strong">Sex:</label><br>
            <div>
                @Html.RadioButtonFor(m => m.gender, "Male", new { @id = "Male", @class = "form-control-custom" }) Male
                @Html.RadioButtonFor(m => m.gender, "Female", new { @id = "Female", @class = "form-control-custom" }) Female
            </div>
        </div>
        <div class="col-xs-12 col-lg-3">
            <label for="str" class="strong">Strength:</label><br>
            @Html.TextBoxFor(m => m.str, new { @class = "form-control" })
            <br>
            <label for="con" class="strong">Constitution:</label><br>
            @Html.TextBoxFor(m => m.con, new { @class = "form-control" })
            <br>
            <label for="dex" class="strong">Dexterity:</label><br>
            @Html.TextBoxFor(m => m.dex, new { @class = "form-control" })
            <br>
            <label for="inte" class="strong">Intelligence:</label><br>
            @Html.TextBoxFor(m => m.inte, new { @class = "form-control" })
            <br>
            <label for="wis" class="strong">Wisdom:</label><br>
            @Html.TextBoxFor(m => m.wis, new { @class = "form-control" })
            <br>
            <label for="cha" class="strong">Charisma:</label><br>
            @Html.TextBoxFor(m => m.cha, new { @class = "form-control" })
            <br>
        </div>
        <div class="col-xs-12 col-lg-3">
            <label for="speed" class="strong">Speed:</label><br>
            @Html.TextBoxFor(m => m.speed, new { @class = "form-control" })
            <br>
            <label for="armor" class="strong">Armor Class:</label><br>
            @Html.TextBoxFor(m => m.armor, new { @class = "form-control" })
            <br>
            <label for="hitpoints" class="strong">Total hit points:</label><br>
            @Html.TextBoxFor(m => m.hitpoints, new { @class = "form-control" })
            <br>
            <div>
                <label class="strong">Weapons:</label><br>
                <div id="weapon-list">
                    @foreach (var weapon in Model.weapons)
                    {
                        <div class='weapon-list-item'>
                            <label class='spell'>@weapon.name</label>
                            <input type='text' class='hidden' name='weaponInputs' value="@weapon.id">
                            <span onclick='removeWeapon(this)' class='glyphicon glyphicon-remove weapon-remove'></span> <br>
                        </div>
                    }
                </div>
                @Html.DropDownListFor(m => m.weapon, Model.weaponList, new { @class = "form-control" })
                <br>
                <span class="btn btn-default" id="addWeapon" onclick="addWeapon()">Add Weapon</span>
                <br /><br />
            </div>
            <div>
                <label class="strong">Spells:</label><br>
                <div id="spell-list">
                    @foreach (var spell in Model.spells)
                    {
                        <div class='spell-list-item'>
                            <label class='spell'>@spell.name</label>
                            <input type='text' class='hidden' name='spellInputs' value="@spell.id">
                            <span onclick='removeSpell(this)' class='glyphicon glyphicon-remove spell-remove'></span> <br>
                        </div>
                    }

                </div>
                @Html.DropDownListFor(m => m.spell, Model.spellList, new { @class = "form-control" })
                <br>
                <span class="btn btn-default" id="addSpell" onclick="addSpell()">Add Spell</span>
            </div>
            <br />
            <button type="submit" class="btn btn-success">Save Character</button>
        </div>
        <div class="col-xs-12 col-lg-3 char-div-picture">
            <img src="~/images/dndcharmain2.png" />
        </div>
    </div>
}

<script>
    var element = document.getElementById('race');
    element.selectedIndex = @Model.race.id - 1;

    element = document.getElementById('charClass');
    element.selectedIndex = @Model.charClass.id - 1;

    element = document.getElementById('alignment');
    element.selectedIndex = @Model.alignment.id - 1;
</script>